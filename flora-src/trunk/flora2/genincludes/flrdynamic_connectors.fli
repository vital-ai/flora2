/*******************************************************************************
  file: genincludes/flrdynamic_connectors.fli - commands asserting rules that
				       		dynamically connect to various
                                                modularized predicates
  Author(s): Michael Kifer

  Copyright (C) by
       The Research Foundation of the State University of New York, 2012-2018;
       and Vulcan, Inc., 2012-2014.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

*******************************************************************************/


#include "flora_wspredicates.flh"



%% FL_FORCED_DEFEASIBILITY_UNION/4. Status: FL_DEFEASIBLE/FL_STRICT
?- \+clause(FL_FORCED_DEFEASIBILITY_UNION(_,_,'FLORA_THIS_MODULE_NAME',_),_),
    assert((
    	    FL_FORCED_DEFEASIBILITY_UNION(Id,FileName,'FLORA_THIS_MODULE_NAME',Status)
    	    :-
	       	    FL_FORCED_DEFEASIBILITY(Id,FileName,Status)
	  )).

/*
   WRAP_DIFFOBJEQL_AUX/3 rule must be loaded exactly once. This is why we
   are checking clause(WRAP_DIFFOBJEQL_AUX(_,_,_),_). Reloading this rule
   is not possible when equality is on, since WRAP_DIFFOBJEQL_AUX/3 is
   essentially in the body of every rule (if unfolded).
*/
:- import FLLIBDELAYEDLITERAL/4 from usermod.
?-  ( clause(WRAP_DIFFOBJEQL_AUX(_,_,_),_) -> true
    ;
      assert((
	      WRAP_DIFFOBJEQL_AUX(X,Y,Caller) :-
	        (
	          X = Y
		/*
		; %% this delays WRAP_DIFFOBJEQL until X or Y is bound
		  FLLIBDELAYEDLITERAL(WRAP_DIFFOBJEQL,
		                      NULL,NULL,
		                      [X,Y,WRAP_DIFFOBJEQL(X,Y,Caller)])
	        */
	        %% ;  when((nonvar(X); nonvar(Y)), WRAP_DIFFOBJEQL(X,Y,Caller))
	        ; WRAP_DIFFOBJEQL(X,Y,Caller)
	        )
		/*
		  %%Using WRAP_OBJEQL/3 does not work here because when
   		  %%reloading the trailer XSB complains that WRAP_OBJEQL/3 is
   		  %%still being used (by WRAP_DIFFOBJEQL_AUX/3.

		  WRAP_OBJEQL(X,Y,Caller)
	        */
            ))
    ).



#if exists("ergoisms/flrjustifier.inc")
#include "ergoisms/flrjustifier.inc"
#endif
